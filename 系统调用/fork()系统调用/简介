fork()
功能：fork() 系统调用将创建一个与父进程几乎一样的新进程，之后继续执行下面的指令。程序可以根据 fork() 的返回值，确定当前处于父进程中，还是子进程中。
所需头文件：#include<sys/types.h>
            #include<unistd.h>
原型：pid_t fork()
参数：无
返回值：
     <0:创建进程失败
     =0:代表当前进程是子进程
     >0:代表当前进程是父进程，此时的返回值是子进程的id号

使用fork()函数得到的子进程是父进程的复制品，子进程完全复制了父进程的资源，包括进程上下文、代码区、数据区、堆区、栈区、内存信息、打开文件的文件描述符、
信号处理函数、进程优先级、进程组号、当前工作目录、根目录、资源限制和控制终端等信息，对于已打开的文件，内核会增加每个文件描述符的引用计数，每个进程都可
以用相同的文件句柄访问同一个文件。子进程与父进程的区别有进程号、资源使用情况和计时器等，且父子两个进程各自有自己的地址空间，资源也相互独立。


注意：父子进程的运行先后顺序是完全随机的，仅仅取决于系统的调度，即在使用fork()函数的默认情况下，无法控制父进程在子进程前进行还是子进程在父进程前进
行。
